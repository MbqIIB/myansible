#!/usr/bin/env python

#/*******************************************************************************
# Copyright (c) 2014 IBM Corp.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/*******************************************************************************

# Author: Michael R. Hines <hinesmr@cn.ibm.com>

from time import sleep, time
from os import getuid, environ
from pwd import getpwuid
from subprocess import Popen, PIPE
from sys import stdout, path

import sys
import os
import stat 

#init_file = "/etc/rc.local.test"
init_file = "/etc/rc.local"
init_log = init_file + ".log"

fh = open(init_log, "w")

def msg(m) :
    fh.write(m + "\n")
    print m

try :
    if not os.path.isfile(init_file) :
	rc = open(init_file, "w")
	rc.write("#!/usr/bin/env bash\n")
	rc.write("/usr/sbin/sshd -D\n")
	rc.write("exit 0")
	rc.close()
	st = os.stat(init_file)
	os.chmod(init_file, st.st_mode | stat.S_IEXEC)
	msg("Created new startup script file: " + init_file + ", logging to: " + init_log)

    msg("Booting.")

    proc = Popen(init_file, shell=False, stdout=fh, stderr=fh)

    if proc.pid :
	result = proc.communicate()

	if proc.returncode and result is not None :
	    msg("Error during bootstrap: pid: " + str(proc.pid) + " code: " + str(proc.returncode) + ":\n" + str(result))
    else :
	msg("Startup child did not receive a process ID =(")
	
    while True :
	sleep(3600)

    msg("Finished.")

except KeyboardInterrupt, e :
    msg("Exiting.")
except Exception, e :
    msg(str(e))

fh.close()
